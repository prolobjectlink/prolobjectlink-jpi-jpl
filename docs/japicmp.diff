Comparing source compatibility of C:\Users\Jose Zalacain\Documents\eclipse-java-photon-workspace\prolobjectlink-jpi-jpl\target\prolobjectlink-jpi-jpl-1.1-SNAPSHOT.jar against C:\Users\Jose Zalacain\.m2\repository\io\github\prolobjectlink\prolobjectlink-jpi-jpl\1.0\prolobjectlink-jpi-jpl-1.0.jar
===  UNCHANGED CLASS: PUBLIC ABSTRACT io.github.prolobjectlink.prolog.jpl.JplConverter  (not serializable)
	===  CLASS FILE FORMAT VERSION: 50.0 <- 50.0
	===  UNCHANGED INTERFACE: io.github.prolobjectlink.prolog.PrologConverter
	===  UNCHANGED INTERFACE: io.github.prolobjectlink.prolog.PrologMapper
	===  UNCHANGED SUPERCLASS: io.github.prolobjectlink.prolog.AbstractConverter (<- io.github.prolobjectlink.prolog.AbstractConverter)
	===  UNCHANGED CONSTRUCTOR: PUBLIC JplConverter()
	===  UNCHANGED METHOD: PUBLIC FINAL jpl.Term fromTerm(io.github.prolobjectlink.prolog.PrologTerm)
	===  UNCHANGED METHOD: PUBLIC FINAL jpl.Term fromTerm(io.github.prolobjectlink.prolog.PrologTerm, io.github.prolobjectlink.prolog.PrologTerm[])
	===  UNCHANGED METHOD: PUBLIC FINAL jpl.Term[] fromTermArray(io.github.prolobjectlink.prolog.PrologTerm[])
	===  UNCHANGED METHOD: PUBLIC FINAL io.github.prolobjectlink.prolog.PrologTerm toTerm(jpl.Term)
***  MODIFIED CLASS: PUBLIC ABSTRACT io.github.prolobjectlink.prolog.jpl.JplEngine  (not serializable)
	===  CLASS FILE FORMAT VERSION: 50.0 <- 50.0
	===  UNCHANGED INTERFACE: java.util.Map
	===  UNCHANGED INTERFACE: io.github.prolobjectlink.prolog.PrologEngine
	===  UNCHANGED INTERFACE: java.lang.Iterable
	===  UNCHANGED SUPERCLASS: io.github.prolobjectlink.prolog.AbstractEngine (<- io.github.prolobjectlink.prolog.AbstractEngine)
	===  UNCHANGED CONSTRUCTOR: PROTECTED JplEngine(io.github.prolobjectlink.prolog.PrologProvider)
	===  UNCHANGED CONSTRUCTOR: PROTECTED JplEngine(io.github.prolobjectlink.prolog.PrologProvider, java.lang.String)
	===  UNCHANGED METHOD: PUBLIC FINAL void abolish(java.lang.String, int)
	===  UNCHANGED METHOD: PUBLIC FINAL void asserta(java.lang.String)
	===  UNCHANGED METHOD: PUBLIC FINAL void asserta(io.github.prolobjectlink.prolog.PrologTerm, io.github.prolobjectlink.prolog.PrologTerm[])
	+++  NEW METHOD: PUBLIC(+) FINAL(+) void asserta(io.github.prolobjectlink.prolog.PrologTerm)
	===  UNCHANGED METHOD: PUBLIC FINAL void assertz(java.lang.String)
	===  UNCHANGED METHOD: PUBLIC FINAL void assertz(io.github.prolobjectlink.prolog.PrologTerm, io.github.prolobjectlink.prolog.PrologTerm[])
	+++  NEW METHOD: PUBLIC(+) FINAL(+) void assertz(io.github.prolobjectlink.prolog.PrologTerm)
	===  UNCHANGED METHOD: PUBLIC FINAL boolean clause(java.lang.String)
	===  UNCHANGED METHOD: PUBLIC FINAL boolean clause(io.github.prolobjectlink.prolog.PrologTerm, io.github.prolobjectlink.prolog.PrologTerm[])
	+++  NEW METHOD: PUBLIC(+) FINAL(+) boolean clause(io.github.prolobjectlink.prolog.PrologTerm)
	===  UNCHANGED METHOD: PUBLIC FINAL void consult(java.lang.String)
	===  UNCHANGED METHOD: PUBLIC FINAL void consult(java.io.Reader)
	===  UNCHANGED METHOD: PUBLIC FINAL boolean currentOperator(int, java.lang.String, java.lang.String)
	===  UNCHANGED METHOD: PUBLIC FINAL java.util.Set currentOperators()
	===  UNCHANGED METHOD: PUBLIC FINAL boolean currentPredicate(java.lang.String, int)
	===  UNCHANGED METHOD: PUBLIC FINAL void dispose()
	===  UNCHANGED METHOD: PUBLIC boolean equals(java.lang.Object)
	===  UNCHANGED METHOD: PUBLIC FINAL java.util.Set getBuiltIns()
	===  UNCHANGED METHOD: PUBLIC FINAL java.lang.String getCache()
	===  UNCHANGED METHOD: PUBLIC FINAL java.util.Set getPredicates()
	+++  NEW METHOD: PUBLIC(+) FINAL(+) io.github.prolobjectlink.prolog.PrologProgram getProgram()
	===  UNCHANGED METHOD: PUBLIC FINAL int getProgramSize()
	===  UNCHANGED METHOD: PUBLIC int hashCode()
	===  UNCHANGED METHOD: PUBLIC FINAL void include(java.lang.String)
	===  UNCHANGED METHOD: PUBLIC FINAL void include(java.io.Reader)
	===  UNCHANGED METHOD: PUBLIC FINAL java.util.Iterator iterator()
	===  UNCHANGED METHOD: PUBLIC FINAL void operator(int, java.lang.String, java.lang.String)
	===  UNCHANGED METHOD: PUBLIC FINAL void persist(java.lang.String)
	===  UNCHANGED METHOD: PUBLIC FINAL io.github.prolobjectlink.prolog.PrologQuery query(java.lang.String)
	===  UNCHANGED METHOD: PUBLIC FINAL io.github.prolobjectlink.prolog.PrologQuery query(io.github.prolobjectlink.prolog.PrologTerm[])
	===  UNCHANGED METHOD: PUBLIC FINAL io.github.prolobjectlink.prolog.PrologQuery query(io.github.prolobjectlink.prolog.PrologTerm, io.github.prolobjectlink.prolog.PrologTerm[])
	+++  NEW METHOD: PUBLIC(+) FINAL(+) io.github.prolobjectlink.prolog.PrologQuery query(io.github.prolobjectlink.prolog.PrologTerm)
	===  UNCHANGED METHOD: PUBLIC FINAL void retract(java.lang.String)
	===  UNCHANGED METHOD: PUBLIC FINAL void retract(io.github.prolobjectlink.prolog.PrologTerm, io.github.prolobjectlink.prolog.PrologTerm[])
	+++  NEW METHOD: PUBLIC(+) FINAL(+) void retract(io.github.prolobjectlink.prolog.PrologTerm)
+++* NEW CLASS: PUBLIC(+) FINAL(+) io.github.prolobjectlink.prolog.jpl.JplEntry  (not serializable)
	+++  CLASS FILE FORMAT VERSION: 50.0 <- n.a.
	+++  NEW INTERFACE: io.github.prolobjectlink.prolog.PrologEntry
	+++  NEW INTERFACE: java.util.Map$Entry
	+++  NEW INTERFACE: io.github.prolobjectlink.prolog.PrologElement
	+++  NEW INTERFACE: java.lang.Comparable
	+++  NEW INTERFACE: io.github.prolobjectlink.prolog.PrologTerm
	+++  NEW SUPERCLASS: io.github.prolobjectlink.prolog.AbstractCompounds
	+++  NEW METHOD: PUBLIC(+) boolean equals(java.lang.Object)
	+++  NEW METHOD: PUBLIC(+) io.github.prolobjectlink.prolog.PrologTerm[] getArguments()
	+++  NEW METHOD: PUBLIC(+) int getArity()
	+++  NEW METHOD: PUBLIC(+) java.lang.String getFunctor()
	+++  NEW METHOD: PUBLIC(+) io.github.prolobjectlink.prolog.PrologTerm getKey()
	+++  NEW METHOD: PUBLIC(+) io.github.prolobjectlink.prolog.PrologTerm getValue()
	+++  NEW METHOD: PUBLIC(+) int hashCode()
	+++  NEW METHOD: PUBLIC(+) boolean isEmptyList()
	+++  NEW METHOD: PUBLIC(+) boolean isList()
	+++  NEW METHOD: PUBLIC(+) boolean isStructure()
	+++  NEW METHOD: PUBLIC(+) io.github.prolobjectlink.prolog.PrologTerm setValue(io.github.prolobjectlink.prolog.PrologTerm)
	+++  NEW METHOD: PUBLIC(+) java.lang.String toString()
+++* NEW CLASS: PUBLIC(+) io.github.prolobjectlink.prolog.jpl.JplField  (not serializable)
	+++  CLASS FILE FORMAT VERSION: 50.0 <- n.a.
	+++  NEW INTERFACE: io.github.prolobjectlink.prolog.PrologVariable
	+++  NEW INTERFACE: io.github.prolobjectlink.prolog.PrologElement
	+++  NEW INTERFACE: java.lang.Comparable
	+++  NEW INTERFACE: io.github.prolobjectlink.prolog.PrologTerm
	+++  NEW INTERFACE: io.github.prolobjectlink.prolog.PrologField
	+++  NEW SUPERCLASS: io.github.prolobjectlink.prolog.jpl.JplVariable
	+++  NEW METHOD: PUBLIC(+) FINAL(+) io.github.prolobjectlink.prolog.PrologTerm getNameTerm()
===  UNCHANGED CLASS: PUBLIC FINAL io.github.prolobjectlink.prolog.jpl.JplIndicator  (not serializable)
	===  CLASS FILE FORMAT VERSION: 50.0 <- 50.0
	===  UNCHANGED INTERFACE: io.github.prolobjectlink.prolog.PrologIndicator
	===  UNCHANGED SUPERCLASS: io.github.prolobjectlink.prolog.AbstractIndicator (<- io.github.prolobjectlink.prolog.AbstractIndicator)
	===  UNCHANGED CONSTRUCTOR: PUBLIC JplIndicator(java.lang.String, int)
***  MODIFIED CLASS: PUBLIC io.github.prolobjectlink.prolog.jpl.JplList  (not serializable)
	===  CLASS FILE FORMAT VERSION: 50.0 <- 50.0
	===  UNCHANGED INTERFACE: io.github.prolobjectlink.prolog.PrologList
	===  UNCHANGED INTERFACE: io.github.prolobjectlink.prolog.PrologElement
	===  UNCHANGED INTERFACE: java.lang.Comparable
	===  UNCHANGED INTERFACE: io.github.prolobjectlink.prolog.PrologTerm
	===  UNCHANGED INTERFACE: java.lang.Iterable
	===  UNCHANGED SUPERCLASS: io.github.prolobjectlink.prolog.jpl.JplTerm (<- io.github.prolobjectlink.prolog.jpl.JplTerm)
	===  UNCHANGED FIELD: PUBLIC STATIC FINAL jpl.Term EMPTY
	===  UNCHANGED CONSTRUCTOR: PROTECTED JplList(io.github.prolobjectlink.prolog.PrologProvider, jpl.Term[])
	===  UNCHANGED CONSTRUCTOR: PROTECTED JplList(io.github.prolobjectlink.prolog.PrologProvider, io.github.prolobjectlink.prolog.PrologTerm[])
	===  UNCHANGED CONSTRUCTOR: PROTECTED JplList(io.github.prolobjectlink.prolog.PrologProvider)
	===  UNCHANGED CONSTRUCTOR: PROTECTED JplList(io.github.prolobjectlink.prolog.PrologProvider, io.github.prolobjectlink.prolog.PrologTerm[], io.github.prolobjectlink.prolog.PrologTerm)
	===  UNCHANGED CONSTRUCTOR: PROTECTED JplList(io.github.prolobjectlink.prolog.PrologProvider, io.github.prolobjectlink.prolog.PrologTerm, io.github.prolobjectlink.prolog.PrologTerm)
	===  UNCHANGED METHOD: PUBLIC void clear()
	===  UNCHANGED METHOD: PUBLIC io.github.prolobjectlink.prolog.PrologTerm[] getArguments()
	===  UNCHANGED METHOD: PUBLIC int getArity()
	===  UNCHANGED METHOD: PUBLIC java.lang.String getFunctor()
	===  UNCHANGED METHOD: PUBLIC io.github.prolobjectlink.prolog.PrologTerm getHead()
	---  REMOVED METHOD: PUBLIC(-) java.lang.String getIndicator()
	===  UNCHANGED METHOD: PUBLIC io.github.prolobjectlink.prolog.PrologTerm getTail()
	---  REMOVED METHOD: PUBLIC(-) boolean hasIndicator(java.lang.String, int)
	===  UNCHANGED METHOD: PUBLIC boolean isEmpty()
	===  UNCHANGED METHOD: PUBLIC java.util.Iterator iterator()
	===  UNCHANGED METHOD: PUBLIC int size()
	===  UNCHANGED METHOD: PUBLIC java.lang.String toString()
+++* NEW CLASS: PUBLIC(+) FINAL(+) io.github.prolobjectlink.prolog.jpl.JplMap  (not serializable)
	+++  CLASS FILE FORMAT VERSION: 50.0 <- n.a.
	+++  NEW INTERFACE: io.github.prolobjectlink.prolog.PrologList
	+++  NEW INTERFACE: io.github.prolobjectlink.prolog.PrologMap
	+++  NEW INTERFACE: java.util.Map
	+++  NEW INTERFACE: io.github.prolobjectlink.prolog.PrologElement
	+++  NEW INTERFACE: java.lang.Comparable
	+++  NEW INTERFACE: io.github.prolobjectlink.prolog.PrologTerm
	+++  NEW INTERFACE: java.lang.Iterable
	+++  NEW SUPERCLASS: io.github.prolobjectlink.prolog.AbstractCompounds
	+++  NEW METHOD: PUBLIC(+) void clear()
	+++  NEW METHOD: PUBLIC(+) boolean contains(java.util.Map$Entry)
	+++  NEW METHOD: PUBLIC(+) boolean containsKey(java.lang.Object)
	+++  NEW METHOD: PUBLIC(+) boolean containsValue(java.lang.Object)
	+++  NEW METHOD: PUBLIC(+) java.util.Set entrySet()
	+++  NEW METHOD: PUBLIC(+) boolean equals(java.lang.Object)
	+++  NEW METHOD: PUBLIC(+) io.github.prolobjectlink.prolog.PrologTerm get(java.lang.Object)
	+++  NEW METHOD: PUBLIC(+) io.github.prolobjectlink.prolog.PrologTerm getArgument(int)
	+++  NEW METHOD: PUBLIC(+) io.github.prolobjectlink.prolog.PrologTerm[] getArguments()
	+++  NEW METHOD: PUBLIC(+) int getArity()
	+++  NEW METHOD: PUBLIC(+) java.lang.String getFunctor()
	+++  NEW METHOD: PUBLIC(+) io.github.prolobjectlink.prolog.PrologTerm getHead()
	+++  NEW METHOD: PUBLIC(+) io.github.prolobjectlink.prolog.PrologTerm getTail()
	+++  NEW METHOD: PUBLIC(+) int hashCode()
	+++  NEW METHOD: PUBLIC(+) boolean isEmpty()
	+++  NEW METHOD: PUBLIC(+) boolean isEmptyList()
	+++  NEW METHOD: PUBLIC(+) boolean isList()
	+++  NEW METHOD: PUBLIC(+) boolean isStructure()
	+++  NEW METHOD: PUBLIC(+) java.util.Iterator iterator()
	+++  NEW METHOD: PUBLIC(+) java.util.Set keySet()
	+++  NEW METHOD: PUBLIC(+) void put(java.util.Map$Entry)
	+++  NEW METHOD: PUBLIC(+) io.github.prolobjectlink.prolog.PrologTerm put(io.github.prolobjectlink.prolog.PrologTerm, io.github.prolobjectlink.prolog.PrologTerm)
	+++  NEW METHOD: PUBLIC(+) void putAll(java.util.Collection)
	+++  NEW METHOD: PUBLIC(+) void putAll(java.util.Map)
	+++  NEW METHOD: PUBLIC(+) void remove(java.util.Map$Entry)
	+++  NEW METHOD: PUBLIC(+) io.github.prolobjectlink.prolog.PrologTerm remove(java.lang.Object)
	+++  NEW METHOD: PUBLIC(+) int size()
	+++  NEW METHOD: PUBLIC(+) java.lang.String toString()
	+++  NEW METHOD: PUBLIC(+) java.util.Collection values()
===  UNCHANGED CLASS: PUBLIC FINAL io.github.prolobjectlink.prolog.jpl.JplOperator  (not serializable)
	===  CLASS FILE FORMAT VERSION: 50.0 <- 50.0
	===  UNCHANGED INTERFACE: java.lang.Comparable
	===  UNCHANGED INTERFACE: io.github.prolobjectlink.prolog.PrologOperator
	===  UNCHANGED SUPERCLASS: io.github.prolobjectlink.prolog.AbstractOperator (<- io.github.prolobjectlink.prolog.AbstractOperator)
	===  UNCHANGED CONSTRUCTOR: PUBLIC JplOperator(int, java.lang.String, java.lang.String)
+++* NEW CLASS: PUBLIC(+) io.github.prolobjectlink.prolog.jpl.JplParameter  (not serializable)
	+++  CLASS FILE FORMAT VERSION: 50.0 <- n.a.
	+++  NEW INTERFACE: io.github.prolobjectlink.prolog.PrologVariable
	+++  NEW INTERFACE: io.github.prolobjectlink.prolog.PrologElement
	+++  NEW INTERFACE: java.lang.Comparable
	+++  NEW INTERFACE: io.github.prolobjectlink.prolog.PrologTerm
	+++  NEW INTERFACE: io.github.prolobjectlink.prolog.PrologParameter
	+++  NEW SUPERCLASS: io.github.prolobjectlink.prolog.jpl.JplVariable
	+++  NEW METHOD: PUBLIC(+) FINAL(+) io.github.prolobjectlink.prolog.PrologTerm getNameTerm()
***! MODIFIED CLASS: PUBLIC ABSTRACT io.github.prolobjectlink.prolog.jpl.JplProvider  (not serializable)
	===  CLASS FILE FORMAT VERSION: 50.0 <- 50.0
	===  UNCHANGED INTERFACE: io.github.prolobjectlink.prolog.PrologProvider
	===  UNCHANGED INTERFACE: java.util.Map
	===  UNCHANGED INTERFACE: io.github.prolobjectlink.prolog.PrologMapper
	===  UNCHANGED INTERFACE: io.github.prolobjectlink.prolog.PrologParser
	===  UNCHANGED SUPERCLASS: io.github.prolobjectlink.prolog.AbstractProvider (<- io.github.prolobjectlink.prolog.AbstractProvider)
	===  UNCHANGED CONSTRUCTOR: PUBLIC JplProvider(io.github.prolobjectlink.prolog.PrologConverter)
	+++  NEW METHOD: PUBLIC(+) FINAL(+) io.github.prolobjectlink.prolog.PrologTerm falseReference()
	===  UNCHANGED METHOD: PUBLIC FINAL io.github.prolobjectlink.prolog.PrologLogger getLogger()
	---  REMOVED METHOD: PUBLIC(-) FINAL(-) boolean isCompliant()
	===  UNCHANGED METHOD: PUBLIC FINAL io.github.prolobjectlink.prolog.PrologAtom newAtom(java.lang.String)
	===  UNCHANGED METHOD: PUBLIC FINAL io.github.prolobjectlink.prolog.PrologDouble newDouble(java.lang.Number)
	+++  NEW METHOD: PUBLIC(+) FINAL(+) io.github.prolobjectlink.prolog.PrologTerm newEntry(io.github.prolobjectlink.prolog.PrologTerm, io.github.prolobjectlink.prolog.PrologTerm)
	+++  NEW METHOD: PUBLIC(+) FINAL(+) io.github.prolobjectlink.prolog.PrologTerm newEntry(java.lang.Object, java.lang.Object)
	+++  NEW METHOD: PUBLIC(+) io.github.prolobjectlink.prolog.PrologTerm newField(io.github.prolobjectlink.prolog.PrologTerm)
	+++  NEW METHOD: PUBLIC(+) io.github.prolobjectlink.prolog.PrologTerm newField(java.lang.String)
	+++  NEW METHOD: PUBLIC(+) io.github.prolobjectlink.prolog.PrologTerm newField(io.github.prolobjectlink.prolog.PrologTerm, io.github.prolobjectlink.prolog.PrologTerm)
	+++  NEW METHOD: PUBLIC(+) io.github.prolobjectlink.prolog.PrologTerm newField(java.lang.String, java.lang.String)
	===  UNCHANGED METHOD: PUBLIC FINAL io.github.prolobjectlink.prolog.PrologFloat newFloat(java.lang.Number)
	===  UNCHANGED METHOD: PUBLIC FINAL io.github.prolobjectlink.prolog.PrologInteger newInteger(java.lang.Number)
	===  UNCHANGED METHOD: PUBLIC FINAL io.github.prolobjectlink.prolog.PrologList newList()
	===  UNCHANGED METHOD: PUBLIC FINAL io.github.prolobjectlink.prolog.PrologList newList(io.github.prolobjectlink.prolog.PrologTerm[])
	===  UNCHANGED METHOD: PUBLIC FINAL io.github.prolobjectlink.prolog.PrologList newList(io.github.prolobjectlink.prolog.PrologTerm, io.github.prolobjectlink.prolog.PrologTerm)
	===  UNCHANGED METHOD: PUBLIC FINAL io.github.prolobjectlink.prolog.PrologList newList(io.github.prolobjectlink.prolog.PrologTerm[], io.github.prolobjectlink.prolog.PrologTerm)
	===  UNCHANGED METHOD: PUBLIC FINAL io.github.prolobjectlink.prolog.PrologLong newLong(java.lang.Number)
	+++  NEW METHOD: PUBLIC(+) FINAL(+) io.github.prolobjectlink.prolog.PrologTerm newMap(java.util.Map)
	+++  NEW METHOD: PUBLIC(+) FINAL(+) io.github.prolobjectlink.prolog.PrologTerm newMap(int)
	+++  NEW METHOD: PUBLIC(+) FINAL(+) io.github.prolobjectlink.prolog.PrologTerm newMap()
	+++  NEW METHOD: PUBLIC(+) io.github.prolobjectlink.prolog.PrologTerm newParameter(io.github.prolobjectlink.prolog.PrologTerm)
	+++  NEW METHOD: PUBLIC(+) io.github.prolobjectlink.prolog.PrologTerm newParameter(java.lang.String)
	+++  NEW METHOD: PUBLIC(+) io.github.prolobjectlink.prolog.PrologTerm newParameter(io.github.prolobjectlink.prolog.PrologTerm, io.github.prolobjectlink.prolog.PrologTerm)
	+++  NEW METHOD: PUBLIC(+) io.github.prolobjectlink.prolog.PrologTerm newParameter(java.lang.String, java.lang.String)
	***! MODIFIED METHOD: PUBLIC FINAL (<- NON_FINAL) io.github.prolobjectlink.prolog.PrologTerm newReference(java.lang.Object)
	+++  NEW METHOD: PUBLIC(+) io.github.prolobjectlink.prolog.PrologTerm newResult(io.github.prolobjectlink.prolog.PrologTerm)
	+++  NEW METHOD: PUBLIC(+) io.github.prolobjectlink.prolog.PrologTerm newResult(java.lang.String)
	+++  NEW METHOD: PUBLIC(+) io.github.prolobjectlink.prolog.PrologTerm newResult(io.github.prolobjectlink.prolog.PrologTerm, io.github.prolobjectlink.prolog.PrologTerm)
	+++  NEW METHOD: PUBLIC(+) io.github.prolobjectlink.prolog.PrologTerm newResult(java.lang.String, java.lang.String)
	===  UNCHANGED METHOD: PUBLIC FINAL io.github.prolobjectlink.prolog.PrologStructure newStructure(java.lang.String, io.github.prolobjectlink.prolog.PrologTerm[])
	===  UNCHANGED METHOD: PUBLIC FINAL io.github.prolobjectlink.prolog.PrologTerm newStructure(io.github.prolobjectlink.prolog.PrologTerm, java.lang.String, io.github.prolobjectlink.prolog.PrologTerm)
	===  UNCHANGED METHOD: PUBLIC FINAL io.github.prolobjectlink.prolog.PrologVariable newVariable(int)
	===  UNCHANGED METHOD: PUBLIC FINAL io.github.prolobjectlink.prolog.PrologVariable newVariable(java.lang.String, int)
	+++  NEW METHOD: PUBLIC(+) FINAL(+) io.github.prolobjectlink.prolog.PrologTerm nullReference()
	===  UNCHANGED METHOD: PUBLIC FINAL io.github.prolobjectlink.prolog.PrologTerm parseTerm(java.lang.String)
	===  UNCHANGED METHOD: PUBLIC FINAL io.github.prolobjectlink.prolog.PrologTerm[] parseTerms(java.lang.String)
	===  UNCHANGED METHOD: PUBLIC FINAL io.github.prolobjectlink.prolog.PrologTerm prologCut()
	===  UNCHANGED METHOD: PUBLIC FINAL io.github.prolobjectlink.prolog.PrologTerm prologEmpty()
	===  UNCHANGED METHOD: PUBLIC FINAL io.github.prolobjectlink.prolog.PrologTerm prologFail()
	===  UNCHANGED METHOD: PUBLIC FINAL io.github.prolobjectlink.prolog.PrologTerm prologFalse()
	===  UNCHANGED METHOD: PUBLIC FINAL io.github.prolobjectlink.prolog.PrologTerm prologInclude(java.lang.String)
	===  UNCHANGED METHOD: PUBLIC FINAL io.github.prolobjectlink.prolog.PrologTerm prologNil()
	===  UNCHANGED METHOD: PUBLIC FINAL io.github.prolobjectlink.prolog.PrologTerm prologTrue()
	+++  NEW METHOD: PUBLIC(+) FINAL(+) io.github.prolobjectlink.prolog.PrologTerm trueReference()
	+++  NEW METHOD: PUBLIC(+) FINAL(+) io.github.prolobjectlink.prolog.PrologTerm voidReference()
***! MODIFIED CLASS: PUBLIC FINAL io.github.prolobjectlink.prolog.jpl.JplReference  (not serializable)
	===  CLASS FILE FORMAT VERSION: 50.0 <- 50.0
	===  UNCHANGED INTERFACE: io.github.prolobjectlink.prolog.PrologElement
	---! REMOVED INTERFACE: io.github.prolobjectlink.prolog.PrologStructure
	===  UNCHANGED INTERFACE: java.lang.Comparable
	===  UNCHANGED INTERFACE: io.github.prolobjectlink.prolog.PrologTerm
	===  UNCHANGED INTERFACE: io.github.prolobjectlink.prolog.PrologReference
	***! MODIFIED SUPERCLASS: io.github.prolobjectlink.prolog.jpl.JplTerm (<- io.github.prolobjectlink.prolog.jpl.JplStructure)
	===  UNCHANGED METHOD: PUBLIC NON_SYNTHETIC (<- SYNTHETIC) NON_BRIDGE (<- BRIDGE) io.github.prolobjectlink.prolog.PrologTerm[] getArguments()
	===  UNCHANGED METHOD: PUBLIC NON_SYNTHETIC (<- SYNTHETIC) NON_BRIDGE (<- BRIDGE) int getArity()
	===  UNCHANGED METHOD: PUBLIC NON_SYNTHETIC (<- SYNTHETIC) NON_BRIDGE (<- BRIDGE) java.lang.String getFunctor()
	+++  NEW METHOD: PUBLIC(+) java.lang.Object getObject()
	+++  NEW METHOD: PUBLIC(+) java.lang.Class getReferenceType()
+++* NEW CLASS: PUBLIC(+) io.github.prolobjectlink.prolog.jpl.JplResult  (not serializable)
	+++  CLASS FILE FORMAT VERSION: 50.0 <- n.a.
	+++  NEW INTERFACE: io.github.prolobjectlink.prolog.PrologResult
	+++  NEW INTERFACE: io.github.prolobjectlink.prolog.PrologVariable
	+++  NEW INTERFACE: io.github.prolobjectlink.prolog.PrologElement
	+++  NEW INTERFACE: java.lang.Comparable
	+++  NEW INTERFACE: io.github.prolobjectlink.prolog.PrologTerm
	+++  NEW SUPERCLASS: io.github.prolobjectlink.prolog.jpl.JplVariable
	+++  NEW METHOD: PUBLIC(+) FINAL(+) io.github.prolobjectlink.prolog.PrologTerm getNameTerm()
===  UNCHANGED CLASS: PUBLIC ABSTRACT io.github.prolobjectlink.prolog.jpl.JplScriptFactory  (not serializable)
	===  CLASS FILE FORMAT VERSION: 50.0 <- 50.0
	===  UNCHANGED INTERFACE: javax.script.ScriptEngineFactory
	===  UNCHANGED SUPERCLASS: io.github.prolobjectlink.prolog.PrologScriptEngineFactory (<- io.github.prolobjectlink.prolog.PrologScriptEngineFactory)
	===  UNCHANGED CONSTRUCTOR: PUBLIC JplScriptFactory(io.github.prolobjectlink.prolog.PrologEngine)
	===  UNCHANGED METHOD: PUBLIC FINAL java.lang.String getMethodCallSyntax(java.lang.String, java.lang.String, java.lang.String[])
+++* NEW CLASS: PUBLIC(+) io.github.prolobjectlink.prolog.jpl.JplTypedField  (not serializable)
	+++  CLASS FILE FORMAT VERSION: 50.0 <- n.a.
	+++  NEW INTERFACE: io.github.prolobjectlink.prolog.PrologTypedField
	+++  NEW INTERFACE: io.github.prolobjectlink.prolog.PrologEntry
	+++  NEW INTERFACE: java.util.Map$Entry
	+++  NEW INTERFACE: io.github.prolobjectlink.prolog.PrologVariable
	+++  NEW INTERFACE: io.github.prolobjectlink.prolog.PrologElement
	+++  NEW INTERFACE: java.lang.Comparable
	+++  NEW INTERFACE: io.github.prolobjectlink.prolog.PrologTerm
	+++  NEW INTERFACE: io.github.prolobjectlink.prolog.PrologField
	+++  NEW SUPERCLASS: io.github.prolobjectlink.prolog.jpl.JplField
	+++  NEW METHOD: PUBLIC(+) io.github.prolobjectlink.prolog.PrologTerm[] getArguments()
	+++  NEW METHOD: PUBLIC(+) FINAL(+) int getArity()
	+++  NEW METHOD: PUBLIC(+) FINAL(+) java.lang.String getFunctor()
	+++  NEW METHOD: PUBLIC(+) io.github.prolobjectlink.prolog.PrologTerm getKey()
	+++  NEW METHOD: PUBLIC(+) java.lang.String getKind()
	+++  NEW METHOD: PUBLIC(+) io.github.prolobjectlink.prolog.PrologTerm getKindTerm()
	+++  NEW METHOD: PUBLIC(+) io.github.prolobjectlink.prolog.PrologTerm getValue()
	+++  NEW METHOD: PUBLIC(+) io.github.prolobjectlink.prolog.PrologTerm setValue(io.github.prolobjectlink.prolog.PrologTerm)
+++* NEW CLASS: PUBLIC(+) io.github.prolobjectlink.prolog.jpl.JplTypedParameter  (not serializable)
	+++  CLASS FILE FORMAT VERSION: 50.0 <- n.a.
	+++  NEW INTERFACE: io.github.prolobjectlink.prolog.PrologEntry
	+++  NEW INTERFACE: java.util.Map$Entry
	+++  NEW INTERFACE: io.github.prolobjectlink.prolog.PrologTypedParameter
	+++  NEW INTERFACE: io.github.prolobjectlink.prolog.PrologVariable
	+++  NEW INTERFACE: io.github.prolobjectlink.prolog.PrologElement
	+++  NEW INTERFACE: java.lang.Comparable
	+++  NEW INTERFACE: io.github.prolobjectlink.prolog.PrologTerm
	+++  NEW INTERFACE: io.github.prolobjectlink.prolog.PrologParameter
	+++  NEW SUPERCLASS: io.github.prolobjectlink.prolog.jpl.JplParameter
	+++  NEW METHOD: PUBLIC(+) io.github.prolobjectlink.prolog.PrologTerm[] getArguments()
	+++  NEW METHOD: PUBLIC(+) FINAL(+) int getArity()
	+++  NEW METHOD: PUBLIC(+) FINAL(+) java.lang.String getFunctor()
	+++  NEW METHOD: PUBLIC(+) io.github.prolobjectlink.prolog.PrologTerm getKey()
	+++  NEW METHOD: PUBLIC(+) java.lang.String getKind()
	+++  NEW METHOD: PUBLIC(+) io.github.prolobjectlink.prolog.PrologTerm getKindTerm()
	+++  NEW METHOD: PUBLIC(+) io.github.prolobjectlink.prolog.PrologTerm getValue()
	+++  NEW METHOD: PUBLIC(+) io.github.prolobjectlink.prolog.PrologTerm setValue(io.github.prolobjectlink.prolog.PrologTerm)
+++* NEW CLASS: PUBLIC(+) io.github.prolobjectlink.prolog.jpl.JplTypedResult  (not serializable)
	+++  CLASS FILE FORMAT VERSION: 50.0 <- n.a.
	+++  NEW INTERFACE: io.github.prolobjectlink.prolog.PrologEntry
	+++  NEW INTERFACE: io.github.prolobjectlink.prolog.PrologResult
	+++  NEW INTERFACE: io.github.prolobjectlink.prolog.PrologTypedResult
	+++  NEW INTERFACE: java.util.Map$Entry
	+++  NEW INTERFACE: io.github.prolobjectlink.prolog.PrologVariable
	+++  NEW INTERFACE: io.github.prolobjectlink.prolog.PrologElement
	+++  NEW INTERFACE: java.lang.Comparable
	+++  NEW INTERFACE: io.github.prolobjectlink.prolog.PrologTerm
	+++  NEW INTERFACE: io.github.prolobjectlink.prolog.PrologField
	+++  NEW SUPERCLASS: io.github.prolobjectlink.prolog.jpl.JplResult
	+++  NEW METHOD: PUBLIC(+) io.github.prolobjectlink.prolog.PrologTerm[] getArguments()
	+++  NEW METHOD: PUBLIC(+) FINAL(+) int getArity()
	+++  NEW METHOD: PUBLIC(+) FINAL(+) java.lang.String getFunctor()
	+++  NEW METHOD: PUBLIC(+) io.github.prolobjectlink.prolog.PrologTerm getKey()
	+++  NEW METHOD: PUBLIC(+) java.lang.String getKind()
	+++  NEW METHOD: PUBLIC(+) io.github.prolobjectlink.prolog.PrologTerm getKindTerm()
	+++  NEW METHOD: PUBLIC(+) io.github.prolobjectlink.prolog.PrologTerm getValue()
	+++  NEW METHOD: PUBLIC(+) io.github.prolobjectlink.prolog.PrologTerm setValue(io.github.prolobjectlink.prolog.PrologTerm)
